import $ from "jquery";

/**
 * Convert the reference in JSON to actual object.
 *
 * The report JSON generated by MLComp would contain object references
 * like `{'__type__': 'ObjectRef', '__id__': xxx}`.  Such object reference
 * should be replaced by the actual object.
 *
 * @param data The JSON object generated by MLComp.
 */
function dereference(data) {
  // first, gather the id of objects
  const id_to_object = {};

  function gather(o) {
    if ($.isPlainObject(o)) {
      if (o['__type__'] && o['__type__'] !== 'ObjectRef') {
        const id = o['__id__'];
        if (id) {
          id_to_object[id] = o;
        }
        for (const key of Object.keys(o)) {
          const val = o[key];
          gather(val);
        }
      }
    } else if (Array.isArray(o)) {
      for (const val of o) {
        gather(val);
      }
    }
  }
  gather(data);

  // next, replace the object references by actual objects
  function replace(o) {
    if ($.isPlainObject(o)) {
      if (o['__type__'] === 'ObjectRef') {
        const id = o['__id__'];
        if (id) {
          const v = id_to_object[id];
          if (v)
            return v;
        }
      } else if (o['__type__']) {
        for (const key of Object.keys(o)) {
          o[key] = replace(o[key]);
        }
      }
    } else if (Array.isArray(o)) {
      for (let i=0; i<o.length; ++i) {
        o[i] = replace(o[i]);
      }
    }
    return o;
  }
  return replace(data);
}

/**
 * Class of the report file.
 *
 * It contains both the meta information and the report object.
 */
export class ReportFile {
  constructor({ generator, report }) {
    this.generator = generator;
    this.data = dereference(report);
  }
}

/**
 * Get the report object at specified `url`.
 *
 * @param url The URL of "report.json".
 * @param success Callback on success.
 * @param error Callback on error.
 */
export function getReportObject({ url, success, error }) {
  $.ajax({
    url: url,
    cache: false,
    success(data) {
      if (success) {
        try {
          success(new ReportFile(data));
        } catch (e) {
          console.log(e);
          if (error) error(e);
        }
      }
    },
    error(e) {
      console.log(e);
      if (error) error(e.statusText);
    }
  });
}